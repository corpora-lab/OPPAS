Test simulation XBack Up
  Check.hs tests
    Unit tests
      POTL, Stack Trace Lang V1, first group test

Run with:
Norm. phi:    PNd (PNu (XBu 1))
Tokens:       [fromList [Prop 1],fromList [Prop 2],fromList [Prop 3]]
Token props:
[Prop 1,Prop 2,Prop 3,Prop 4,End]
Closure:
[1,2,3,4,#,PNu (XBu 1),PNd (PNu (XBu 1)),XBu 1,AuxBd 1,~ 1,~ 2,~ 3,~ 4,~ #,~ (PNu (XBu 1)),~ (PNd (PNu (XBu 1))),~ (XBu 1),~ (AuxBd 1)]
Atoms:
FS: [1,~ 2,~ 3,~ 4,~ #,~ (PNu (XBu 1)),~ (PNd (PNu (XBu 1))),~ (XBu 1),~ (AuxBd 1)]             ES: EncodedAtom [9]2
FS: [2,~ 1,~ 3,~ 4,~ #,~ (PNu (XBu 1)),~ (PNd (PNu (XBu 1))),~ (XBu 1),~ (AuxBd 1)]             ES: EncodedAtom [9]4
FS: [3,~ 1,~ 2,~ 4,~ #,~ (PNu (XBu 1)),~ (PNd (PNu (XBu 1))),~ (XBu 1),~ (AuxBd 1)]             ES: EncodedAtom [9]8
FS: [#,~ 1,~ 2,~ 3,~ 4,~ (PNu (XBu 1)),~ (PNd (PNu (XBu 1))),~ (XBu 1),~ (AuxBd 1)]             ES: EncodedAtom [9]1
FS: [1,AuxBd 1,~ 2,~ 3,~ 4,~ #,~ (PNu (XBu 1)),~ (PNd (PNu (XBu 1))),~ (XBu 1)]         ES: EncodedAtom [9]258
FS: [2,AuxBd 1,~ 1,~ 3,~ 4,~ #,~ (PNu (XBu 1)),~ (PNd (PNu (XBu 1))),~ (XBu 1)]         ES: EncodedAtom [9]260
FS: [3,AuxBd 1,~ 1,~ 2,~ 4,~ #,~ (PNu (XBu 1)),~ (PNd (PNu (XBu 1))),~ (XBu 1)]         ES: EncodedAtom [9]264
FS: [#,AuxBd 1,~ 1,~ 2,~ 3,~ 4,~ (PNu (XBu 1)),~ (PNd (PNu (XBu 1))),~ (XBu 1)]         ES: EncodedAtom [9]257
FS: [1,XBu 1,~ 2,~ 3,~ 4,~ #,~ (PNu (XBu 1)),~ (PNd (PNu (XBu 1))),~ (AuxBd 1)]         ES: EncodedAtom [9]130
FS: [2,XBu 1,~ 1,~ 3,~ 4,~ #,~ (PNu (XBu 1)),~ (PNd (PNu (XBu 1))),~ (AuxBd 1)]         ES: EncodedAtom [9]132



FS: [2,PNu (XBu 1),AuxBd 1,~ 1,~ 3,~ 4,~ #,~ (PNd (PNu (XBu 1))),~ (XBu 1)]             ES: EncodedAtom [9]292
FS: [3,XBu 1,~ 1,~ 2,~ 4,~ #,~ (PNu (XBu 1)),~ (PNd (PNu (XBu 1))),~ (AuxBd 1)]         ES: EncodedAtom [9]136
FS: [3,PNu (XBu 1),~ 1,~ 2,~ 4,~ #,~ (PNd (PNu (XBu 1))),~ (XBu 1),~ (AuxBd 1)]         ES: EncodedAtom [9]40



FS: [3,XBu 1,AuxBd 1,~ 1,~ 2,~ 4,~ #,~ (PNu (XBu 1)),~ (PNd (PNu (XBu 1)))]             ES: EncodedAtom [9]392

FS: [#,XBu 1,~ 1,~ 2,~ 3,~ 4,~ (PNu (XBu 1)),~ (PNd (PNu (XBu 1))),~ (AuxBd 1)]         ES: EncodedAtom [9]129
FS: [1,XBu 1,AuxBd 1,~ 2,~ 3,~ 4,~ #,~ (PNu (XBu 1)),~ (PNd (PNu (XBu 1)))]             ES: EncodedAtom [9]386
FS: [2,XBu 1,AuxBd 1,~ 1,~ 3,~ 4,~ #,~ (PNu (XBu 1)),~ (PNd (PNu (XBu 1)))]             ES: EncodedAtom [9]388

FS: [#,XBu 1,AuxBd 1,~ 1,~ 2,~ 3,~ 4,~ (PNu (XBu 1)),~ (PNd (PNu (XBu 1)))]             ES: EncodedAtom [9]385
FS: [2,PNd (PNu (XBu 1)),~ 1,~ 3,~ 4,~ #,~ (PNu (XBu 1)),~ (XBu 1),~ (AuxBd 1)]         ES: EncodedAtom [9]68
FS: [3,PNd (PNu (XBu 1)),~ 1,~ 2,~ 4,~ #,~ (PNu (XBu 1)),~ (XBu 1),~ (AuxBd 1)]         ES: EncodedAtom [9]72
FS: [#,PNd (PNu (XBu 1)),~ 1,~ 2,~ 3,~ 4,~ (PNu (XBu 1)),~ (XBu 1),~ (AuxBd 1)]         ES: EncodedAtom [9]65
FS: [1,PNd (PNu (XBu 1)),AuxBd 1,~ 2,~ 3,~ 4,~ #,~ (PNu (XBu 1)),~ (XBu 1)]             ES: EncodedAtom [9]322
FS: [2,PNd (PNu (XBu 1)),AuxBd 1,~ 1,~ 3,~ 4,~ #,~ (PNu (XBu 1)),~ (XBu 1)]             ES: EncodedAtom [9]324
FS: [3,PNd (PNu (XBu 1)),AuxBd 1,~ 1,~ 2,~ 4,~ #,~ (PNu (XBu 1)),~ (XBu 1)]             ES: EncodedAtom [9]328
FS: [#,PNd (PNu (XBu 1)),AuxBd 1,~ 1,~ 2,~ 3,~ 4,~ (PNu (XBu 1)),~ (XBu 1)]             ES: EncodedAtom [9]321
FS: [1,PNd (PNu (XBu 1)),XBu 1,~ 2,~ 3,~ 4,~ #,~ (PNu (XBu 1)),~ (AuxBd 1)]             ES: EncodedAtom [9]194
FS: [2,PNd (PNu (XBu 1)),XBu 1,~ 1,~ 3,~ 4,~ #,~ (PNu (XBu 1)),~ (AuxBd 1)]             ES: EncodedAtom [9]196
FS: [3,PNd (PNu (XBu 1)),XBu 1,~ 1,~ 2,~ 4,~ #,~ (PNu (XBu 1)),~ (AuxBd 1)]             ES: EncodedAtom [9]200
FS: [#,PNd (PNu (XBu 1)),XBu 1,~ 1,~ 2,~ 3,~ 4,~ (PNu (XBu 1)),~ (AuxBd 1)]             ES: EncodedAtom [9]193
FS: [1,PNd (PNu (XBu 1)),XBu 1,AuxBd 1,~ 2,~ 3,~ 4,~ #,~ (PNu (XBu 1))]         ES: EncodedAtom [9]450
FS: [2,PNd (PNu (XBu 1)),XBu 1,AuxBd 1,~ 1,~ 3,~ 4,~ #,~ (PNu (XBu 1))]         ES: EncodedAtom [9]452
FS: [3,PNd (PNu (XBu 1)),XBu 1,AuxBd 1,~ 1,~ 2,~ 4,~ #,~ (PNu (XBu 1))]         ES: EncodedAtom [9]456
FS: [#,PNd (PNu (XBu 1)),XBu 1,AuxBd 1,~ 1,~ 2,~ 3,~ 4,~ (PNu (XBu 1))]         ES: EncodedAtom [9]449
FS: [1,PNu (XBu 1),~ 2,~ 3,~ 4,~ #,~ (PNd (PNu (XBu 1))),~ (XBu 1),~ (AuxBd 1)]         ES: EncodedAtom [9]34
FS: [2,PNu (XBu 1),~ 1,~ 3,~ 4,~ #,~ (PNd (PNu (XBu 1))),~ (XBu 1),~ (AuxBd 1)]         ES: EncodedAtom [9]36
FS: [#,PNu (XBu 1),~ 1,~ 2,~ 3,~ 4,~ (PNd (PNu (XBu 1))),~ (XBu 1),~ (AuxBd 1)]         ES: EncodedAtom [9]33
FS: [1,PNu (XBu 1),AuxBd 1,~ 2,~ 3,~ 4,~ #,~ (PNd (PNu (XBu 1))),~ (XBu 1)]             ES: EncodedAtom [9]290
FS: [3,PNu (XBu 1),AuxBd 1,~ 1,~ 2,~ 4,~ #,~ (PNd (PNu (XBu 1))),~ (XBu 1)]             ES: EncodedAtom [9]296
FS: [#,PNu (XBu 1),AuxBd 1,~ 1,~ 2,~ 3,~ 4,~ (PNd (PNu (XBu 1))),~ (XBu 1)]             ES: EncodedAtom [9]289
FS: [1,PNu (XBu 1),XBu 1,~ 2,~ 3,~ 4,~ #,~ (PNd (PNu (XBu 1))),~ (AuxBd 1)]             ES: EncodedAtom [9]162
FS: [2,PNu (XBu 1),XBu 1,~ 1,~ 3,~ 4,~ #,~ (PNd (PNu (XBu 1))),~ (AuxBd 1)]             ES: EncodedAtom [9]164
FS: [3,PNu (XBu 1),XBu 1,~ 1,~ 2,~ 4,~ #,~ (PNd (PNu (XBu 1))),~ (AuxBd 1)]             ES: EncodedAtom [9]168
FS: [#,PNu (XBu 1),XBu 1,~ 1,~ 2,~ 3,~ 4,~ (PNd (PNu (XBu 1))),~ (AuxBd 1)]             ES: EncodedAtom [9]161
FS: [1,PNu (XBu 1),XBu 1,AuxBd 1,~ 2,~ 3,~ 4,~ #,~ (PNd (PNu (XBu 1)))]         ES: EncodedAtom [9]418
FS: [2,PNu (XBu 1),XBu 1,AuxBd 1,~ 1,~ 3,~ 4,~ #,~ (PNd (PNu (XBu 1)))]         ES: EncodedAtom [9]420
FS: [3,PNu (XBu 1),XBu 1,AuxBd 1,~ 1,~ 2,~ 4,~ #,~ (PNd (PNu (XBu 1)))]         ES: EncodedAtom [9]424
FS: [#,PNu (XBu 1),XBu 1,AuxBd 1,~ 1,~ 2,~ 3,~ 4,~ (PNd (PNu (XBu 1)))]         ES: EncodedAtom [9]417
FS: [1,PNu (XBu 1),PNd (PNu (XBu 1)),~ 2,~ 3,~ 4,~ #,~ (XBu 1),~ (AuxBd 1)]             ES: EncodedAtom [9]98
FS: [1,PNd (PNu (XBu 1)),~ 2,~ 3,~ 4,~ #,~ (PNu (XBu 1)),~ (XBu 1),~ (AuxBd 1)]         ES: EncodedAtom [9]66
FS: [2,PNu (XBu 1),PNd (PNu (XBu 1)),~ 1,~ 3,~ 4,~ #,~ (XBu 1),~ (AuxBd 1)]             ES: EncodedAtom [9]100
FS: [3,PNu (XBu 1),PNd (PNu (XBu 1)),~ 1,~ 2,~ 4,~ #,~ (XBu 1),~ (AuxBd 1)]             ES: EncodedAtom [9]104
FS: [#,PNu (XBu 1),PNd (PNu (XBu 1)),~ 1,~ 2,~ 3,~ 4,~ (XBu 1),~ (AuxBd 1)]             ES: EncodedAtom [9]97
FS: [1,PNu (XBu 1),PNd (PNu (XBu 1)),AuxBd 1,~ 2,~ 3,~ 4,~ #,~ (XBu 1)]         ES: EncodedAtom [9]354
FS: [2,PNu (XBu 1),PNd (PNu (XBu 1)),AuxBd 1,~ 1,~ 3,~ 4,~ #,~ (XBu 1)]         ES: EncodedAtom [9]356
FS: [3,PNu (XBu 1),PNd (PNu (XBu 1)),AuxBd 1,~ 1,~ 2,~ 4,~ #,~ (XBu 1)]         ES: EncodedAtom [9]360
FS: [#,PNu (XBu 1),PNd (PNu (XBu 1)),AuxBd 1,~ 1,~ 2,~ 3,~ 4,~ (XBu 1)]         ES: EncodedAtom [9]353
FS: [1,PNu (XBu 1),PNd (PNu (XBu 1)),XBu 1,~ 2,~ 3,~ 4,~ #,~ (AuxBd 1)]         ES: EncodedAtom [9]226
FS: [2,PNu (XBu 1),PNd (PNu (XBu 1)),XBu 1,~ 1,~ 3,~ 4,~ #,~ (AuxBd 1)]         ES: EncodedAtom [9]228
FS: [3,PNu (XBu 1),PNd (PNu (XBu 1)),XBu 1,~ 1,~ 2,~ 4,~ #,~ (AuxBd 1)]         ES: EncodedAtom [9]232
FS: [#,PNu (XBu 1),PNd (PNu (XBu 1)),XBu 1,~ 1,~ 2,~ 3,~ 4,~ (AuxBd 1)]         ES: EncodedAtom [9]225
FS: [1,PNu (XBu 1),PNd (PNu (XBu 1)),XBu 1,AuxBd 1,~ 2,~ 3,~ 4,~ #]             ES: EncodedAtom [9]482
FS: [2,PNu (XBu 1),PNd (PNu (XBu 1)),XBu 1,AuxBd 1,~ 1,~ 3,~ 4,~ #]             ES: EncodedAtom [9]484
FS: [3,PNu (XBu 1),PNd (PNu (XBu 1)),XBu 1,AuxBd 1,~ 1,~ 2,~ 4,~ #]             ES: EncodedAtom [9]488
FS: [#,PNu (XBu 1),PNd (PNu (XBu 1)),XBu 1,AuxBd 1,~ 1,~ 2,~ 3,~ 4]             ES: EncodedAtom [9]481

Pending atoms:
(EncodedAtom [9]0,False,False,False)
(EncodedAtom [9]0,False,False,True)
(EncodedAtom [9]0,False,True,False)
(EncodedAtom [9]0,False,True,True)
(EncodedAtom [9]0,True,False,False)
(EncodedAtom [9]0,True,False,True)
(EncodedAtom [9]128,False,False,False)
(EncodedAtom [9]128,False,False,True)
(EncodedAtom [9]128,False,True,False)
(EncodedAtom [9]128,False,True,True)
(EncodedAtom [9]128,True,False,False)
(EncodedAtom [9]128,True,False,True)
(EncodedAtom [9]256,False,False,False)
(EncodedAtom [9]256,False,False,True)
(EncodedAtom [9]256,False,True,False)
(EncodedAtom [9]256,False,True,True)
(EncodedAtom [9]256,True,False,False)
(EncodedAtom [9]256,True,False,True)
(EncodedAtom [9]384,False,False,False)
(EncodedAtom [9]384,False,False,True)
(EncodedAtom [9]384,False,True,False)
(EncodedAtom [9]384,False,True,True)
(EncodedAtom [9]384,True,False,False)
(EncodedAtom [9]384,True,False,True)

Initial states:

{ C: EncodedAtom [9]66 -- the right initial state
, P: EncodedAtom [9]0
, XL: True
, X=: False
, XR: False
}

------------------------------------------------------------------------------------------------------

Push with: EncodedAtom [5]2
From:

{ C: EncodedAtom [9]66
, P: EncodedAtom [9]0
, XL: True
, X=: False
, XR: False
}
Result:
[{ C: EncodedAtom [9]36
, P: EncodedAtom [9]256
, XL: True
, X=: False
, XR: False
},
{ C: EncodedAtom [9]292
, P: EncodedAtom [9]256
, XL: True
, X=: False                         -------------- the right one
, XR: False
},
{ C: EncodedAtom [9]164
, P: EncodedAtom [9]256
, XL: True
, X=: False
, XR: False
},
{ C: EncodedAtom [9]420
, P: EncodedAtom [9]256
, XL: True
, X=: False
, XR: False
},
{ C: EncodedAtom [9]100
, P: EncodedAtom [9]256
, XL: True
, X=: False
, XR: False
},
{ C: EncodedAtom [9]356
, P: EncodedAtom [9]256
, XL: True
, X=: False
, XR: False
},
{ C: EncodedAtom [9]228
, P: EncodedAtom [9]256
, XL: True
, X=: False
, XR: False
},
{ C: EncodedAtom [9]484
, P: EncodedAtom [9]256
, XL: True
, X=: False
, XR: False
}]

-------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------

Push with: EncodedAtom [5]4
From:

{ C: EncodedAtom [9]292
, P: EncodedAtom [9]256
, XL: True
, X=: False
, XR: False
}
Result:
[
{ C: EncodedAtom [9]136
, P: EncodedAtom [9]0
, XL: False
, X=: False
, XR: False
},


these states are not correct for our computation and must be discarded
------------------------------------------------
{ C: EncodedAtom [9]392
, P: EncodedAtom [9]0
, XL: False
, X=: False
, XR: False
},
{ C: EncodedAtom [9]392
, P: EncodedAtom [9]0
, XL: False
, X=: True
, XR: False
},
{ C: EncodedAtom [9]392
, P: EncodedAtom [9]0
, XL: True
, X=: False
, XR: False
},
{ C: EncodedAtom [9]200
, P: EncodedAtom [9]0
, XL: False
, X=: False
, XR: False
},
{ C: EncodedAtom [9]200
, P: EncodedAtom [9]0
, XL: False
, X=: True
, XR: False
},
{ C: EncodedAtom [9]200
, P: EncodedAtom [9]0
, XL: True
, X=: False
, XR: False
},
{ C: EncodedAtom [9]456
, P: EncodedAtom [9]0
, XL: False
, X=: False
, XR: False
},
{ C: EncodedAtom [9]456
, P: EncodedAtom [9]0
, XL: False
, X=: True
, XR: False
},
{ C: EncodedAtom [9]456
, P: EncodedAtom [9]0
, XL: True
, X=: False
, XR: False
},
{ C: EncodedAtom [9]168
, P: EncodedAtom [9]0
, XL: False
, X=: False
, XR: False
},
{ C: EncodedAtom [9]168
, P: EncodedAtom [9]0
, XL: False
, X=: True
, XR: False
},
{ C: EncodedAtom [9]168
, P: EncodedAtom [9]0
, XL: True
, X=: False
, XR: False
},
{ C: EncodedAtom [9]424
, P: EncodedAtom [9]0
, XL: False
, X=: False
, XR: False
},
{ C: EncodedAtom [9]424
, P: EncodedAtom [9]0
, XL: False
, X=: True
, XR: False
},
{ C: EncodedAtom [9]424
, P: EncodedAtom [9]0
, XL: True
, X=: False
, XR: False
},
{ C: EncodedAtom [9]232
, P: EncodedAtom [9]0
, XL: False
, X=: False
, XR: False
},
{ C: EncodedAtom [9]232
, P: EncodedAtom [9]0
, XL: False
, X=: True
, XR: False
},
{ C: EncodedAtom [9]232
, P: EncodedAtom [9]0
, XL: True
, X=: False
, XR: False
},
{ C: EncodedAtom [9]488
, P: EncodedAtom [9]0
, XL: False
, X=: False
, XR: False
},
{ C: EncodedAtom [9]488
, P: EncodedAtom [9]0
, XL: False
, X=: True
, XR: False
},
{ C: EncodedAtom [9]488
, P: EncodedAtom [9]0
, XL: True
, X=: False
, XR: False
}]

-----------------------------------------------------------

Pop with popped:

{ C: EncodedAtom [9]292
, P: EncodedAtom [9]256
, XL: True
, X=: False
, XR: False
}
From:

{ C: EncodedAtom [9]136
, P: EncodedAtom [9]0
, XL: False
, X=: False
, XR: False
}

------------------------- anzichè andare allo stato 40 come dovrebbe, impazzisce e resta sul 136 anche se apparentemente non potrebbe
Result:
[
{ C: EncodedAtom [9]136
, P: EncodedAtom [9]256
, XL: True 
, X=: False
, XR: True
}]

-----------------------------------------------------
come mai prova a shiftare?
Shift with: EncodedAtom [5]8
From:

{ C: EncodedAtom [9]136
, P: EncodedAtom [9]256
, XL: True
, X=: False
, XR: True
}
Result:
[]











ALTERNATIVE che provengono da stati già scartati



Pop with popped:

{ C: EncodedAtom [9]292
, P: EncodedAtom [9]256
, XL: True
, X=: False
, XR: False
}
From:

{ C: EncodedAtom [9]392
, P: EncodedAtom [9]0
, XL: False
, X=: False
, XR: False
}
Result:
[
{ C: EncodedAtom [9]392
, P: EncodedAtom [9]256
, XL: True
, X=: False
, XR: True
}]

Shift with: EncodedAtom [5]8
From:

{ C: EncodedAtom [9]392
, P: EncodedAtom [9]256
, XL: True
, X=: False
, XR: True
}
Result:
[]

Pop with popped:

{ C: EncodedAtom [9]292
, P: EncodedAtom [9]256
, XL: True
, X=: False
, XR: False
}
From:

{ C: EncodedAtom [9]392
, P: EncodedAtom [9]0
, XL: False
, X=: True
, XR: False
}
Result:
[]

Pop with popped:

{ C: EncodedAtom [9]292
, P: EncodedAtom [9]256
, XL: True
, X=: False
, XR: False
}
From:

{ C: EncodedAtom [9]392
, P: EncodedAtom [9]0
, XL: True
, X=: False
, XR: False
}
Result:
[]

Pop with popped:

{ C: EncodedAtom [9]292
, P: EncodedAtom [9]256
, XL: True
, X=: False
, XR: False
}
From:

{ C: EncodedAtom [9]200
, P: EncodedAtom [9]0
, XL: False
, X=: False
, XR: False
}
Result:
[
{ C: EncodedAtom [9]200
, P: EncodedAtom [9]256
, XL: True
, X=: False
, XR: True
}]

Shift with: EncodedAtom [5]8
From:

{ C: EncodedAtom [9]200
, P: EncodedAtom [9]256
, XL: True
, X=: False
, XR: True
}
Result:
[]

Pop with popped:

{ C: EncodedAtom [9]292
, P: EncodedAtom [9]256
, XL: True
, X=: False
, XR: False
}
From:

{ C: EncodedAtom [9]200
, P: EncodedAtom [9]0
, XL: False
, X=: True
, XR: False
}
Result:
[]

Pop with popped:

{ C: EncodedAtom [9]292
, P: EncodedAtom [9]256
, XL: True
, X=: False
, XR: False
}
From:

{ C: EncodedAtom [9]200
, P: EncodedAtom [9]0
, XL: True
, X=: False
, XR: False
}
Result:
[]

Pop with popped:

{ C: EncodedAtom [9]292
, P: EncodedAtom [9]256
, XL: True
, X=: False
, XR: False
}
From:

{ C: EncodedAtom [9]456
, P: EncodedAtom [9]0
, XL: False
, X=: False
, XR: False
}
Result:
[
{ C: EncodedAtom [9]456
, P: EncodedAtom [9]256
, XL: True
, X=: False
, XR: True
}]

Shift with: EncodedAtom [5]8
From:

{ C: EncodedAtom [9]456
, P: EncodedAtom [9]256
, XL: True
, X=: False
, XR: True
}
Result:
[]

Pop with popped:

{ C: EncodedAtom [9]292
, P: EncodedAtom [9]256
, XL: True
, X=: False
, XR: False
}
From:

{ C: EncodedAtom [9]456
, P: EncodedAtom [9]0
, XL: False
, X=: True
, XR: False
}
Result:
[]

Pop with popped:

{ C: EncodedAtom [9]292
, P: EncodedAtom [9]256
, XL: True
, X=: False
, XR: False
}
From:

{ C: EncodedAtom [9]456
, P: EncodedAtom [9]0
, XL: True
, X=: False
, XR: False
}
Result:
[]

Pop with popped:

{ C: EncodedAtom [9]292
, P: EncodedAtom [9]256
, XL: True
, X=: False
, XR: False
}
From:

{ C: EncodedAtom [9]168
, P: EncodedAtom [9]0
, XL: False
, X=: False
, XR: False
}
Result:
[
{ C: EncodedAtom [9]168
, P: EncodedAtom [9]256
, XL: True
, X=: False
, XR: True
}]

Shift with: EncodedAtom [5]8
From:

{ C: EncodedAtom [9]168
, P: EncodedAtom [9]256
, XL: True
, X=: False
, XR: True
}
Result:
[]

Pop with popped:

{ C: EncodedAtom [9]292
, P: EncodedAtom [9]256
, XL: True
, X=: False
, XR: False
}
From:

{ C: EncodedAtom [9]168
, P: EncodedAtom [9]0
, XL: False
, X=: True
, XR: False
}
Result:
[]

Pop with popped:

{ C: EncodedAtom [9]292
, P: EncodedAtom [9]256
, XL: True
, X=: False
, XR: False
}
From:

{ C: EncodedAtom [9]168
, P: EncodedAtom [9]0
, XL: True
, X=: False
, XR: False
}
Result:
[]

Pop with popped:

{ C: EncodedAtom [9]292
, P: EncodedAtom [9]256
, XL: True
, X=: False
, XR: False
}
From:

{ C: EncodedAtom [9]424
, P: EncodedAtom [9]0
, XL: False
, X=: False
, XR: False
}
Result:
[
{ C: EncodedAtom [9]424
, P: EncodedAtom [9]256
, XL: True
, X=: False
, XR: True
}]

Shift with: EncodedAtom [5]8
From:

{ C: EncodedAtom [9]424
, P: EncodedAtom [9]256
, XL: True
, X=: False
, XR: True
}
Result:
[]

Pop with popped:

{ C: EncodedAtom [9]292
, P: EncodedAtom [9]256
, XL: True
, X=: False
, XR: False
}
From:

{ C: EncodedAtom [9]424
, P: EncodedAtom [9]0
, XL: False
, X=: True
, XR: False
}
Result:
[]

Pop with popped:

{ C: EncodedAtom [9]292
, P: EncodedAtom [9]256
, XL: True
, X=: False
, XR: False
}
From:

{ C: EncodedAtom [9]424
, P: EncodedAtom [9]0
, XL: True
, X=: False
, XR: False
}
Result:
[]

Pop with popped:

{ C: EncodedAtom [9]292
, P: EncodedAtom [9]256
, XL: True
, X=: False
, XR: False
}
From:

{ C: EncodedAtom [9]232
, P: EncodedAtom [9]0
, XL: False
, X=: False
, XR: False
}
Result:
[
{ C: EncodedAtom [9]232
, P: EncodedAtom [9]256
, XL: True
, X=: False
, XR: True
}]

Shift with: EncodedAtom [5]8
From:

{ C: EncodedAtom [9]232
, P: EncodedAtom [9]256
, XL: True
, X=: False
, XR: True
}
Result:
[]

Pop with popped:

{ C: EncodedAtom [9]292
, P: EncodedAtom [9]256
, XL: True
, X=: False
, XR: False
}
From:

{ C: EncodedAtom [9]232
, P: EncodedAtom [9]0
, XL: False
, X=: True
, XR: False
}
Result:
[]

Pop with popped:

{ C: EncodedAtom [9]292
, P: EncodedAtom [9]256
, XL: True
, X=: False
, XR: False
}
From:

{ C: EncodedAtom [9]232
, P: EncodedAtom [9]0
, XL: True
, X=: False
, XR: False
}
Result:
[]

Pop with popped:

{ C: EncodedAtom [9]292
, P: EncodedAtom [9]256
, XL: True
, X=: False
, XR: False
}
From:

{ C: EncodedAtom [9]488
, P: EncodedAtom [9]0
, XL: False
, X=: False
, XR: False
}
Result:
[
{ C: EncodedAtom [9]488
, P: EncodedAtom [9]256
, XL: True
, X=: False
, XR: True
}]

Shift with: EncodedAtom [5]8
From:

{ C: EncodedAtom [9]488
, P: EncodedAtom [9]256
, XL: True
, X=: False
, XR: True
}
Result:
[]

Pop with popped:

{ C: EncodedAtom [9]292
, P: EncodedAtom [9]256
, XL: True
, X=: False
, XR: False
}
From:

{ C: EncodedAtom [9]488
, P: EncodedAtom [9]0
, XL: False
, X=: True
, XR: False
}
Result:
[]

Pop with popped:

{ C: EncodedAtom [9]292
, P: EncodedAtom [9]256
, XL: True
, X=: False
, XR: False
}
From:

{ C: EncodedAtom [9]488
, P: EncodedAtom [9]0
, XL: True
, X=: False
, XR: False
}
Result:
[]

Push with: EncodedAtom [5]4
From:

{ C: EncodedAtom [9]164
, P: EncodedAtom [9]256
, XL: False
, X=: False
, XR: False
}
Result:
[]

Push with: EncodedAtom [5]4
From:

{ C: EncodedAtom [9]164
, P: EncodedAtom [9]256
, XL: False
, X=: True
, XR: False
}
Result:
[]

Push with: EncodedAtom [5]4
From:

{ C: EncodedAtom [9]164
, P: EncodedAtom [9]256
, XL: True
, X=: False
, XR: False
}
Result:
[]

Push with: EncodedAtom [5]4
From:

{ C: EncodedAtom [9]420
, P: EncodedAtom [9]256
, XL: False
, X=: False
, XR: False
}
Result:
[]

Push with: EncodedAtom [5]4
From:

{ C: EncodedAtom [9]420
, P: EncodedAtom [9]256
, XL: False
, X=: True
, XR: False
}
Result:
[]

Push with: EncodedAtom [5]4
From:

{ C: EncodedAtom [9]420
, P: EncodedAtom [9]256
, XL: True
, X=: False
, XR: False
}
Result:
[]

Push with: EncodedAtom [5]4
From:

{ C: EncodedAtom [9]100
, P: EncodedAtom [9]256
, XL: False
, X=: False
, XR: False
}
Result:
[]

Push with: EncodedAtom [5]4
From:

{ C: EncodedAtom [9]100
, P: EncodedAtom [9]256
, XL: False
, X=: True
, XR: False
}
Result:
[]

Push with: EncodedAtom [5]4
From:

{ C: EncodedAtom [9]100
, P: EncodedAtom [9]256
, XL: True
, X=: False
, XR: False
}
Result:
[]

Push with: EncodedAtom [5]4
From:

{ C: EncodedAtom [9]356
, P: EncodedAtom [9]256
, XL: False
, X=: False
, XR: False
}
Result:
[]

Push with: EncodedAtom [5]4
From:

{ C: EncodedAtom [9]356
, P: EncodedAtom [9]256
, XL: False
, X=: True
, XR: False
}
Result:
[]

Push with: EncodedAtom [5]4
From:

{ C: EncodedAtom [9]356
, P: EncodedAtom [9]256
, XL: True
, X=: False
, XR: False
}
Result:
[]

Push with: EncodedAtom [5]4
From:

{ C: EncodedAtom [9]228
, P: EncodedAtom [9]256
, XL: False
, X=: False
, XR: False
}
Result:
[]

Push with: EncodedAtom [5]4
From:

{ C: EncodedAtom [9]228
, P: EncodedAtom [9]256
, XL: False
, X=: True
, XR: False
}
Result:
[]

Push with: EncodedAtom [5]4
From:

{ C: EncodedAtom [9]228
, P: EncodedAtom [9]256
, XL: True
, X=: False
, XR: False
}
Result:
[]

Push with: EncodedAtom [5]4
From:

{ C: EncodedAtom [9]484
, P: EncodedAtom [9]256
, XL: False
, X=: False
, XR: False
}
Result:
[]

Push with: EncodedAtom [5]4
From:

{ C: EncodedAtom [9]484
, P: EncodedAtom [9]256
, XL: False
, X=: True
, XR: False
}
Result:
[]

Push with: EncodedAtom [5]4
From:

{ C: EncodedAtom [9]484
, P: EncodedAtom [9]256
, XL: True
, X=: False
, XR: False
}
Result:
[]

Push with: EncodedAtom [5]2
From:

{ C: EncodedAtom [9]98
, P: EncodedAtom [9]0
, XL: True
, X=: False
, XR: False
}
Result:
[]
FAIL (0.31s)
          test/TestCheck.hs:29:
          Formula should hold for given word!

1 out of 1 tests failed (0.36s)

pomc> Test suite test-pomc failed
Completed 2 action(s).
Test suite failure for package pomc-0.1.0.0
    test-pomc:  exited with: ExitFailure 1
Logs printed to console

francescopont@DESKTOP-6MBR7RP:/mnt/c/Users/ponti/Github/POMC-Test$



































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































