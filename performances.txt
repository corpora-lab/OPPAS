Script started on 2021-04-29 09:52:07+01:00 [TERM="screen" TTY="/dev/pts/1" COLUMNS="80" LINES="24"]
fpontiggia@grinder-srv:~/POMC$ more test-pomc.profhead[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1Pcat[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cls[Kstack test --profile
[0m<<<<<<<<<<<<<<<<<<[0m
[0mYou are currently using Stack version 2.3.1, but version 2.5.1.1 is available[0m
[0mYou can try to upgrade by running 'stack upgrade'[0m
[0mTired of seeing this? Add 'recommend-stack-upgrade: false' to /home/fpontiggia/.stack/config.yaml[0m
[0m>>>>>>>>>>>>>>>>>>[0m
[0m[0m
[0m[0m
[0mpomc-0.1.0.0: unregistering (local file changes: test/TestMCOmega.hs)[0m
Progress 0/2            [0mpomc> configure (lib + exe + test)[0m
Progress 0/2            [0mConfiguring pomc-0.1.0.0...[0m
Progress 0/2            [0mpomc> build (lib + exe + test)[0m
Progress 0/2            [0mPreprocessing library for pomc-0.1.0.0..[0m
Progress 0/2            [0mBuilding library for pomc-0.1.0.0..[0m
Progress 0/2            [0mPreprocessing executable 'pomc' for pomc-0.1.0.0..[0m
Progress 0/2            [0mBuilding executable 'pomc' for pomc-0.1.0.0..[0m
Progress 0/2            [0mPreprocessing test suite 'test-pomc' for pomc-0.1.0.0..[0m
Progress 0/2            [0mBuilding test suite 'test-pomc' for pomc-0.1.0.0..[0m
Progress 0/2            [0m[ 9 of 10] Compiling TestMCOmega[0m
Progress 0/2            [0m[10 of 10] Compiling Main [TestMCOmega changed][0m
Progress 0/2            [0m[0m
Progress 0/2            [0m/home/fpontiggia/POMC/[;1mtest/Test.hs:3:1: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wunused-imports[0m[0m[;1m][0m[0m[;1m[0m
Progress 0/2            [0m    The qualified import of â€˜TestOpaâ€™ is redundant[0m
Progress 0/2            [0m      except perhaps to import instances from â€˜TestOpaâ€™[0m
Progress 0/2            [0m    To import instances alone, use: import TestOpa()[0m[0m[0m
Progress 0/2            [0m[;1m[34m  |[0m[0m[0m
Progress 0/2            [0m[;1m[34m3 |[0m[0m [;1m[35mimport qualified TestOpa     (tests)[0m[0m[0m
Progress 0/2            [0m[;1m[34m  |[0m[0m[;1m[35m ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m[0m
Progress 0/2            [0m[0m[0m[0m[0m
Progress 0/2            [0m/home/fpontiggia/POMC/[;1mtest/Test.hs:4:1: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wunused-imports[0m[0m[;1m][0m[0m[;1m[0m
Progress 0/2            [0m    The qualified import of â€˜TestCheckâ€™ is redundant[0m
Progress 0/2            [0m      except perhaps to import instances from â€˜TestCheckâ€™[0m
Progress 0/2            [0m    To import instances alone, use: import TestCheck()[0m[0m[0m
Progress 0/2            [0m[;1m[34m  |[0m[0m[0m
Progress 0/2            [0m[;1m[34m4 |[0m[0m [;1m[35mimport qualified TestCheck   (tests)[0m[0m[0m
Progress 0/2            [0m[;1m[34m  |[0m[0m[;1m[35m ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m[0m
Progress 0/2            [0m[0m[0m[0m[0m
Progress 0/2            [0m/home/fpontiggia/POMC/[;1mtest/Test.hs:5:1: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wunused-imports[0m[0m[;1m][0m[0m[;1m[0m
Progress 0/2            [0m    The qualified import of â€˜TestSatâ€™ is redundant[0m
Progress 0/2            [0m      except perhaps to import instances from â€˜TestSatâ€™[0m
Progress 0/2            [0m    To import instances alone, use: import TestSat()[0m[0m[0m
Progress 0/2            [0m[;1m[34m  |[0m[0m[0m
Progress 0/2            [0m[;1m[34m5 |[0m[0m [;1m[35mimport qualified TestSat     (tests)[0m[0m[0m
Progress 0/2            [0m[;1m[34m  |[0m[0m[;1m[35m ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m[0m
Progress 0/2            [0m[0m[0m[0m[0m
Progress 0/2            [0m/home/fpontiggia/POMC/[;1mtest/Test.hs:7:1: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wunused-imports[0m[0m[;1m][0m[0m[;1m[0m
Progress 0/2            [0m    The qualified import of â€˜TestMCâ€™ is redundant[0m
Progress 0/2            [0m      except perhaps to import instances from â€˜TestMCâ€™[0m
Progress 0/2            [0m    To import instances alone, use: import TestMC()[0m[0m[0m
Progress 0/2            [0m[;1m[34m  |[0m[0m[0m
Progress 0/2            [0m[;1m[34m7 |[0m[0m [;1m[35mimport qualified TestMC      (tests)[0m[0m[0m
Progress 0/2            [0m[;1m[34m  |[0m[0m[;1m[35m ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m[0m
Progress 0/2            [0mLinking .stack-work/dist/x86_64-linux-tinfo6/Cabal-3.0.1.0/build/test-pomc/test-pomc ...[0m
Progress 0/2            [0m[0m[0m[0m[0m
Progress 0/2            [0mpomc> copy/register[0m
Progress 0/2            [0mInstalling library in /home/fpontiggia/POMC/.stack-work/install/x86_64-linux-tinfo6/300ab18cb8a4d98cb3dee170386d38c5ecfa99087b5a63a918aaae0111a904f7/8.8.4/lib/x86_64-linux-ghc-8.8.4/pomc-0.1.0.0-5YTtivlfjozHVUs4LJjmNG[0m
Progress 0/2            [0mInstalling executable pomc in /home/fpontiggia/POMC/.stack-work/install/x86_64-linux-tinfo6/300ab18cb8a4d98cb3dee170386d38c5ecfa99087b5a63a918aaae0111a904f7/8.8.4/bin[0m
Progress 0/2            [0mRegistering library for pomc-0.1.0.0..[0m
Progress 0/2            [0mpomc> test (suite: test-pomc, args: +RTS -p -RTS)[0m
Progress 0/2            [0m[0m
Progress 1/2: pomc[?25lTests
  TestSatOmega.hs Tests
    OmegaSat Base Tests
      First Call ("call"):                                                                                                                                                                                                                                                                                                 [32;22mOK[m[32;22m (0.02s)[m[32;22m
[m      First Not Call (~ "call"):                                                                                                                                                                                                                                                                                           [32;22mOK[m[32;22m (0.02s)[m[32;22m
[m      Call and not call ("call" And (~ "call")):                                                                                                                                                                                                                                                                           [32;22mOK[m[32;22m
[m      Call and ret ("call" And "ret"):                                                                                                                                                                                                                                                                                     [32;22mOK[m[32;22m
[m      Call, next ret 1 ("call" And (PNd "ret")):                                                                                                                                                                                                                                                                           [32;22mOK[m[32;22m (0.08s)[m[32;22m
[m      Call, next ret 2 (("call" And (PNd "ret")) And (PNu "ret")):                                                                                                                                                                                                                                                         [32;22mOK[m[32;22m (0.15s)[m[32;22m
[m      Call, next down call ("call" And (PNd "call")):                                                                                                                                                                                                                                                                      [32;22mOK[m[32;22m (0.13s)[m[32;22m
[m      Call, next up call ("call" And (PNu "call")):                                                                                                                                                                                                                                                                        [32;22mOK[m[32;22m
[m      Exc, back call pa (PNu ("exc" And ((PBu "call") And "pa"))):                                                                                                                                                                                                                                                         [32;22mOK[m[32;22m (0.67s)[m[32;22m
[m      Matched call 1 ("call" And (XNd "ret")):                                                                                                                                                                                                                                                                             [32;22mOK[m[32;22m (1.42s)[m[32;22m
[m      Matched call 2 (("call" And (XNd "ret")) And (XNu "ret")):                                                                                                                                                                                                                                                           ^[[B^[[B^[[B^[[B^[[B^[[B^[[B^[[B^[[B^[[B^[[B^[[B^[[B^[[B^[[B^[[B^[[B^[[B^[[A^[[A^[[A^[[A^[[A[32;22mOK[m[32;22m (109.73s)[m[32;22m
[m      Impossible downward exc ("call" And (XNd "exc")):                                                                                                                                                                                                                                                                    [32;22mOK[m[32;22m (1.28s)[m[32;22m
[m      Nested calls ("call" And (XNd "call")):                                                                                                                                                                                                                                                                              [32;22mOK[m[32;22m (2.15s)[m[32;22m
[m      Inner call before exc ("call" And (XNu ("exc" And (XBu "call")))):                                                                                                                                                                                                                                                   [32;22mOK[m[32;22m (21.41s)[m[32;22m
[m      No han until ret ("call" And ((~ "han") Ud "ret")):                                                                                                                                                                                                                                                                  [32;22mOK[m[32;22m (43.66s)[m[32;22m
[m      No han until down exc ("call" And ((~ "han") Ud "exc")):                                                                                                                                                                                                                                                             [32;22mOK[m[32;22m (3.50s)[m[32;22m
[m  ModelChecking.hs Omega Tests
    SAS OPA MC Base Tests
      First Call ("call"):                                                                                                                                                                                                                                                                                                 [32;22mOK[m[32;22m
[m      First Not Call (~ "call"):                                                                                                                                                                                                                                                                                           [32;22mOK[m[32;22m
[m      Call and not call ("call" And (~ "call")):                                                                                                                                                                                                                                                                           [32;22mOK[m[32;22m (0.01s)[m[32;22m
[m      Call and ret ("call" And "ret"):                                                                                                                                                                                                                                                                                     [32;22mOK[m[32;22m (0.01s)[m[32;22m
[m      Call, next ret 1 ("call" And (PNd "ret")):                                                                                                                                                                                                                                                                           [32;22mOK[m[32;22m
[m      Call, next ret 2 (("call" And (PNd "ret")) And (PNu "ret")):                                                                                                                                                                                                                                                         [32;22mOK[m[32;22m (0.02s)[m[32;22m
[m      Call, next down call ("call" And (PNd "call")):                                                                                                                                                                                                                                                                      [32;22mOK[m[32;22m (0.01s)[m[32;22m
[m      Call, next up call ("call" And (PNu "call")):                                                                                                                                                                                                                                                                        [32;22mOK[m[32;22m (0.01s)[m[32;22m
[m      Exc, back call pa (PNu ("exc" And ((PBu "call") And "pa"))):                                                                                                                                                                                                                                                         [32;22mOK[m[32;22m
[m      Matched call 1 ("call" And (XNd "ret")):                                                                                                                                                                                                                                                                             [32;22mOK[m[32;22m (0.11s)[m[32;22m
[m      Matched call 2 (("call" And (XNd "ret")) And (XNu "ret")):                                                                                                                                                                                                                                                           [32;22mOK[m[32;22m (3.29s)[m[32;22m
[m      Impossible downward exc ("call" And (XNd "exc")):                                                                                                                                                                                                                                                                    [32;22mOK[m[32;22m (0.11s)[m[32;22m
[m      Nested calls ("call" And (XNd "call")):                                                                                                                                                                                                                                                                              [32;22mOK[m[32;22m (0.09s)[m[32;22m
[m      Inner call before exc ("call" And (XNu ("exc" And (XBu "call")))):                                                                                                                                                                                                                                                   [32;22mOK[m[32;22m (0.52s)[m[32;22m
[m      No han until ret ("call" And ((~ "han") Ud "ret")):                                                                                                                                                                                                                                                                  [32;22mOK[m[32;22m (0.06s)[m[32;22m
[m      No han until down exc ("call" And ((~ "han") Ud "exc")):                                                                                                                                                                                                                                                             [32;22mOK[m[32;22m (0.04s)[m[32;22m
[m    SAS OPA MC Eval Tests
      First position has an inner call to perr (XNd "perr"):                                                                                                                                                                                                                                                               [32;22mOK[m[32;22m (0.11s)[m[32;22m
[m      Third position is call terminated by an exception (PNd (PNd ("call" And (XNu "exc")))):                                                                                                                                                                                                                              [32;22mOK[m[32;22m (0.32s)[m[32;22m
[m      Second position is a handler catching an exception that terminates more than one call (PNd ("han" And (XNd ("exc" And (XBu "call"))))):                                                                                                                                                                              [32;22mOK[m[32;22m (0.64s)[m[32;22m
[m      Second position is a handler not catching an exception that terminates more than one call (PNd ("han" And (~ (XNd ("exc" And (XBu "call")))))):                                                                                                                                                                      [32;22mOK[m[32;22m (5.42s)[m[32;22m
[m      All exceptions terminate more than one call (G ("exc" --> (XBu "call"))):                                                                                                                                                                                                                                            [32;22mOK[m[32;22m (1.05s)[m[32;22m
[m      First position is a call whose function frame contains excs, but which is not directly terminated by one of them. (T Ud "exc"):                                                                                                                                                                                      [32;22mOK[m[32;22m (0.04s)[m[32;22m
[m      Third position is a call whose function frame contains excs, but which is not directly terminated by one of them. (PNd (PNd (T Ud "exc"))):                                                                                                                                                                          [32;22mOK[m[32;22m (0.09s)[m[32;22m
[m      First position is a call whose function frame does not contain excs which do not directly terminate the call. (~ (T Ud "exc")):                                                                                                                                                                                      [32;22mOK[m[32;22m (0.78s)[m[32;22m
[m      First position is a call whose function frame does not contain excs which directly terminate the call. (~ (T Uu "exc")):                                                                                                                                                                                             [32;22mOK[m[32;22m (1.89s)[m[32;22m
[m      Second position terminates an empty function frame (PNd (PBu "call")):                                                                                                                                                                                                                                               [32;22mOK[m[32;22m
[m      Fourth position terminates an empty function frame (PNd (PNd (PNd (PBu "call")))):                                                                                                                                                                                                                                   [32;22mOK[m[32;22m (0.03s)[m[32;22m
[m      First position does not contain an inner call with empty body (~ (XNd (PNd (PBu "call")))):                                                                                                                                                                                                                          [32;22mOK[m[32;22m (3.26s)[m[32;22m
[m      A call is terminated by an exception, and the next function terminated by the same exception is pb (F (HNd "pb")):                                                                                                                                                                                                   [32;22mOK[m[32;22m (0.06s)[m[32;22m
[m      A call is terminated by an exception, and the previous function terminated by the same exception is pb (F (HBd "pb")):                                                                                                                                                                                               [32;22mOK[m[32;22m (0.09s)[m[32;22m
[m      A call to procedure pa is terminated by an exception, and the same exception later terminates pc (F ("pa" And ("call" HUd "pc"))):                                                                                                                                                                                   [32;22mOK[m[32;22m (7.58s)[m[32;22m
[m      A call to procedure pc is terminated by an exception, and the same exception earlier terminated pa (F ("pc" And ("call" HSd "pa"))):                                                                                                                                                                                 [32;22mOK[m[32;22m (3.60s)[m[32;22m
[m      If procedure pb is called by a function, the same function must later call perr after pb returns, without calling pc in the meantime. (G (("call" And "pb") --> ((~ "pc") HUu "perr"))):                                                                                                                             [32;22mOK[m[32;22m (0.97s)[m[32;22m
[m      There is a call to a function such that the next function called by its parent is perr. (F (HNu "perr")):                                                                                                                                                                                                            [32;22mOK[m[32;22m (0.01s)[m[32;22m
[m      There is a call to a function such that the previous function called by its parent is perr. (F (HBu "perr")):                                                                                                                                                                                                        [32;22mOK[m[32;22m (0.03s)[m[32;22m
[m      There is a call to function pa such that its parent later calls pb. (F ("pa" And ("call" HUu "pb"))):                                                                                                                                                                                                                [32;22mOK[m[32;22m (0.26s)[m[32;22m
[m      There is a call to function pb such that its parent previously called pa. (F ("pb" And ("call" HSu "pa"))):                                                                                                                                                                                                          [32;22mOK[m[32;22m (0.37s)[m[32;22m
[m      All calls have a matched return (G ("call" --> (XNd "ret"))):                                                                                                                                                                                                                                                        [32;22mOK[m[32;22m (0.35s)[m[32;22m
[m      No call is terminated by an exception (G ("call" --> (~ (PNu "exc")))):                                                                                                                                                                                                                                              [32;22mOK[m[32;22m (0.24s)[m[32;22m
[m      Procedure pa can never be terminated by an exception (G (("call" And "pa") --> (~ ((PNu "exc") Or (XNu "exc"))))):                                                                                                                                                                                                   [32;22mOK[m[32;22m (25.77s)[m[32;22m
[m      Procedure pa can never be terminated by an exception (G ("exc" --> (~ ((PBu ("call" And "pa")) Or (XBu ("call" And "pa")))))):                                                                                                                                                                                       [32;22mOK[m[32;22m (2.13s)[m[32;22m
[m      If procedure `pa' is present into the stack when procedure `pb' is called, `pb' throws an exception. (G ((("call" And "pb") And (T Sd ("call" And "pa"))) --> ((PNu "exc") Or (XNu "exc")))):                                                                                                                        [32;22mOK[m[32;22m (13.51s)[m[32;22m
[m      If procedure `pa' is present into the stack when procedure `pb' is called, `pb' or one of the functions it calls throw an exception. (G ((("call" And "pb") And (T Sd ("call" And "pa"))) --> (T Ud ((PNu "exc") Or (XNu "exc"))))):                                                                                 [32;22mOK[m[32;22m (106.12s)[m[32;22m
[m      All exception handlers are uninstalled by a return statement (i.e., they do not catch any exception) (G ("han" --> (XNu "ret"))):                                                                                                                                                                                    [32;22mOK[m[32;22m (0.09s)[m[32;22m
[m      The first position is inside a function call terminated by an exception, or a handler that catches an exception. (T Uu "exc"):                                                                                                                                                                                       [32;22mOK[m[32;22m (0.13s)[m[32;22m
[m      The third position is inside a function call terminated by an exception, or a handler that catches an exception. (PNd (PNd (T Uu "exc"))):                                                                                                                                                                           [32;22mOK[m[32;22m (0.60s)[m[32;22m
[m      Each call to pc is enclosed into a handler-caught exception pair. (G (("call" And "pc") --> (T Uu ("exc" And (XBd "han"))))):                                                                                                                                                                                        [32;22mOK[m[32;22m (3.45s)[m[32;22m
[m      The call in the first position makes at least a direct subcall to function perr, which returns normally. ("call" Ud ("ret" And "perr")):                                                                                                                                                                             [32;22mOK[m[32;22m (0.11s)[m[32;22m
[m      The call in the first position makes a function call, and before that, there is an instance of function pb (even in a previous inner call). (XNd ("call" And (("call" Or "exc") Su "pb"))):                                                                                                                          [32;22mOK[m[32;22m (0.76s)[m[32;22m
[m      From the third position, it is possible to reach a return, possibly of another function. (PNd (PNd (("call" Or "ret") Uu "ret"))):                                                                                                                                                                                   [32;22mOK[m[32;22m (0.70s)[m[32;22m
[m    LargerRec OPA MC Base Tests
      First Call ("call"):                                                                                                                                                                                                                                                                                                 [32;22mOK[m[32;22m
[m      First Not Call (~ "call"):                                                                                                                                                                                                                                                                                           [32;22mOK[m[32;22m (0.02s)[m[32;22m
[m      Call and not call ("call" And (~ "call")):                                                                                                                                                                                                                                                                           [32;22mOK[m[32;22m (0.02s)[m[32;22m
[m      Call and ret ("call" And "ret"):                                                                                                                                                                                                                                                                                     [32;22mOK[m[32;22m (0.03s)[m[32;22m
[m      Call, next ret 1 ("call" And (PNd "ret")):                                                                                                                                                                                                                                                                           [32;22mOK[m[32;22m (0.04s)[m[32;22m
[m      Call, next ret 2 (("call" And (PNd "ret")) And (PNu "ret")):                                                                                                                                                                                                                                                         [32;22mOK[m[32;22m (0.07s)[m[32;22m
[m      Call, next down call ("call" And (PNd "call")):                                                                                                                                                                                                                                                                      [32;22mOK[m[32;22m
[m      Call, next up call ("call" And (PNu "call")):                                                                                                                                                                                                                                                                        [32;22mOK[m[32;22m (0.03s)[m[32;22m
[m      Exc, back call pa (PNu ("exc" And ((PBu "call") And "pa"))):                                                                                                                                                                                                                                                         [32;22mOK[m[32;22m (0.06s)[m[32;22m
[m      Matched call 1 ("call" And (XNd "ret")):                                                                                                                                                                                                                                                                             [32;22mOK[m[32;22m (1.05s)[m[32;22m
[m      Matched call 2 (("call" And (XNd "ret")) And (XNu "ret")):                                                                                                                                                                                                                                                           [32;22mOK[m[32;22m (35.45s)[m[32;22m
[m      Impossible downward exc ("call" And (XNd "exc")):                                                                                                                                                                                                                                                                    [32;22mOK[m[32;22m (0.84s)[m[32;22m
[m      Nested calls ("call" And (XNd "call")):                                                                                                                                                                                                                                                                              [32;22mOK[m[32;22m (0.49s)[m[32;22m
[m      Inner call before exc ("call" And (XNu ("exc" And (XBu "call")))):                                                                                                                                                                                                                                                   [32;22mOK[m[32;22m (3.98s)[m[32;22m
[m      No han until ret ("call" And ((~ "han") Ud "ret")):                                                                                                                                                                                                                                                                  [32;22mOK[m[32;22m (1.74s)[m[32;22m
[m      No han until down exc ("call" And ((~ "han") Ud "exc")):                                                                                                                                                                                                                                                             [32;22mOK[m[32;22m (0.73s)[m[32;22m
[m    LargerRec OPA MC Eval Tests
      First position has an inner call to perr (XNd "perr"):                                                                                                                                                                                                                                                               [32;22mOK[m[32;22m (0.72s)[m[32;22m
[m      Third position is call terminated by an exception (PNd (PNd ("call" And (XNu "exc")))):                                                                                                                                                                                                                              [32;22mOK[m[32;22m (2.17s)[m[32;22m
[m      Second position is a handler catching an exception that terminates more than one call (PNd ("han" And (XNd ("exc" And (XBu "call"))))):                                                                                                                                                                              [32;22mOK[m[32;22m (4.07s)[m[32;22m
[m      Second position is a handler not catching an exception that terminates more than one call (PNd ("han" And (~ (XNd ("exc" And (XBu "call")))))):                                                                                                                                                                      [32;22mOK[m[32;22m (4.78s)[m[32;22m
[m      All exceptions terminate more than one call (G ("exc" --> (XBu "call"))):                                                                                                                                                                                                                                            [32;22mOK[m[32;22m (0.48s)[m[32;22m
[m      First position is a call whose function frame contains excs, but which is not directly terminated by one of them. (T Ud "exc"):                                                                                                                                                                                      [32;22mOK[m[32;22m (0.11s)[m[32;22m
[m      Third position is a call whose function frame contains excs, but which is not directly terminated by one of them. (PNd (PNd (T Ud "exc"))):                                                                                                                                                                          [32;22mOK[m[32;22m (0.25s)[m[32;22m
[m      First position is a call whose function frame does not contain excs which do not directly terminate the call. (~ (T Ud "exc")):                                                                                                                                                                                      [32;22mOK[m[32;22m (0.31s)[m[32;22m
[m      First position is a call whose function frame does not contain excs which directly terminate the call. (~ (T Uu "exc")):                                                                                                                                                                                             [32;22mOK[m[32;22m (2.75s)[m[32;22m
[m      Second position terminates an empty function frame (PNd (PBu "call")):                                                                                                                                                                                                                                               [32;22mOK[m[32;22m (0.03s)[m[32;22m
[m      Fourth position terminates an empty function frame (PNd (PNd (PNd (PBu "call")))):                                                                                                                                                                                                                                   [32;22mOK[m[32;22m (0.21s)[m[32;22m
[m      First position does not contain an inner call with empty body (~ (XNd (PNd (PBu "call")))):                                                                                                                                                                                                                          [32;22mOK[m[32;22m (4.14s)[m[32;22m
[m      A call is terminated by an exception, and the next function terminated by the same exception is pb (F (HNd "pb")):                                                                                                                                                                                                   [32;22mOK[m[32;22m (0.19s)[m[32;22m
[m      A call is terminated by an exception, and the previous function terminated by the same exception is pb (F (HBd "pb")):                                                                                                                                                                                               [32;22mOK[m[32;22m (0.25s)[m[32;22m
[m      A call to procedure pa is terminated by an exception, and the same exception later terminates pc (F ("pa" And ("call" HUd "pc"))):                                                                                                                                                                                   [32;22mOK[m[32;22m (58.55s)[m[32;22m
[m      A call to procedure pc is terminated by an exception, and the same exception earlier terminated pa (F ("pc" And ("call" HSd "pa"))):                                                                                                                                                                                 [32;22mOK[m[32;22m (65.80s)[m[32;22m
[m      If procedure pb is called by a function, the same function must later call perr after pb returns, without calling pc in the meantime. (G (("call" And "pb") --> ((~ "pc") HUu "perr"))):                                                                                                                             [32;22mOK[m[32;22m (1.47s)[m[32;22m
[m      There is a call to a function such that the next function called by its parent is perr. (F (HNu "perr")):                                                                                                                                                                                                            [32;22mOK[m[32;22m (0.07s)[m[32;22m
[m      There is a call to a function such that the previous function called by its parent is perr. (F (HBu "perr")):                                                                                                                                                                                                        [32;22mOK[m[32;22m (0.13s)[m[32;22m
[m      There is a call to function pa such that its parent later calls pb. (F ("pa" And ("call" HUu "pb"))):                                                                                                                                                                                                                [32;22mOK[m[32;22m (0.54s)[m[32;22m
[m      There is a call to function pb such that its parent previously called pa. (F ("pb" And ("call" HSu "pa"))):                                                                                                                                                                                                          [32;22mOK[m[32;22m (0.87s)[m[32;22m
[m      All calls have a matched return (G ("call" --> (XNd "ret"))):                                                                                                                                                                                                                                                        [32;22mOK[m[32;22m (2.84s)[m[32;22m
[m      No call is terminated by an exception (G ("call" --> (~ (PNu "exc")))):                                                                                                                                                                                                                                              [32;22mOK[m[32;22m (0.14s)[m[32;22m
[m      Procedure pa can never be terminated by an exception (G (("call" And "pa") --> (~ ((PNu "exc") Or (XNu "exc"))))):                                                                                                                                                                                                   [32;22mOK[m[32;22m (33.43s)[m[32;22m
[m      Procedure pa can never be terminated by an exception (G ("exc" --> (~ ((PBu ("call" And "pa")) Or (XBu ("call" And "pa")))))):                                                                                                                                                                                       [32;22mOK[m[32;22m (2.49s)[m[32;22m
[m      If procedure `pa' is present into the stack when procedure `pb' is called, `pb' throws an exception. (G ((("call" And "pb") And (T Sd ("call" And "pa"))) --> ((PNu "exc") Or (XNu "exc")))):                                                                                                                        [32;22mOK[m[32;22m (19.14s)[m[32;22m
[m      If procedure `pa' is present into the stack when procedure `pb' is called, `pb' or one of the functions it calls throw an exception. (G ((("call" And "pb") And (T Sd ("call" And "pa"))) --> (T Ud ((PNu "exc") Or (XNu "exc"))))):                                                                                 [32;22mOK[m[32;22m (134.13s)[m[32;22m
[m      All exception handlers are uninstalled by a return statement (i.e., they do not catch any exception) (G ("han" --> (XNu "ret"))):                                                                                                                                                                                    [32;22mOK[m[32;22m (0.19s)[m[32;22m
[m      The first position is inside a function call terminated by an exception, or a handler that catches an exception. (T Uu "exc"):                                                                                                                                                                                       [32;22mOK[m[32;22m (1.29s)[m[32;22m
[m      The third position is inside a function call terminated by an exception, or a handler that catches an exception. (PNd (PNd (T Uu "exc"))):                                                                                                                                                                           [32;22mOK[m[32;22m (6.62s)[m[32;22m
[m      Each call to pc is enclosed into a handler-caught exception pair. (G (("call" And "pc") --> (T Uu ("exc" And (XBd "han"))))):                                                                                                                                                                                        [32;22mOK[m[32;22m (4.83s)[m[32;22m
[m      The call in the first position makes at least a direct subcall to function perr, which returns normally. ("call" Ud ("ret" And "perr")):                                                                                                                                                                             [32;22mOK[m[32;22m (3.79s)[m[32;22m
[m      The call in the first position makes a function call, and before that, there is an instance of function pb (even in a previous inner call). (XNd ("call" And (("call" Or "exc") Su "pb"))):                                                                                                                          [32;22mOK[m[32;22m (3.62s)[m[32;22m
[m      From the third position, it is possible to reach a return, possibly of another function. (PNd (PNd (("call" Or "ret") Uu "ret"))):                                                                                                                                                                                   [32;22mOK[m[32;22m (4.50s)[m[32;22m
[m    Stack Inspection OPA
      If perr is called, pa is not on the stack. (G (("call" And "perr") --> (~ (T Sd "pa")))):                                                                                                                                                                                                                            [32;22mOK[m[32;22m (1.91s)[m[32;22m
[m    Stack Overflow
      The stack is never deeper than 3. (G (~ ("call" And ((XBd ("call" And ((XBd ("call" And ((XBd "call") Or (PBd "call")))) Or (PBd ("call" And ((XBd "call") Or (PBd "call"))))))) Or (PBd ("call" And ((XBd ("call" And ((XBd "call") Or (PBd "call")))) Or (PBd ("call" And ((XBd "call") Or (PBd "call"))))))))))): [32;22mOK[m[32;22m (23.28s)[m[32;22m
[m    Jensen Tests
      Only privileged reads. (G (("call" And "raw_rd") --> (~ (T Sd (("call" And (~ "P_all")) And (~ "raw_rd")))))):                                                                                                                                                                                                       [32;22mOK[m[32;22m (4.22s)[m[32;22m
[m      Only privileged writes. (G (("call" And "raw_wr") --> (~ (T Sd (("call" And (~ "P_all")) And (~ "raw_wr")))))):                                                                                                                                                                                                      [32;22mOK[m[32;22m (4.19s)[m[32;22m
[m    Jensen Full Privileges Tests
      Only privileged reads. (G (("call" And "raw_rd") --> (~ (T Sd (("call" And (~ "P_rd")) And (~ "raw_rd")))))):                                                                                                                                                                                                        [32;22mOK[m[32;22m (4.21s)[m[32;22m
[m      Only privileged writes. (G (("call" And "raw_wr") --> (~ (T Sd (("call" And (~ "P_wr")) And (~ "raw_wr")))))):                                                                                                                                                                                                       [32;22mOK[m[32;22m (4.20s)[m[32;22m
[m      Only reads with canpay privilege. (G (("call" And "raw_rd") --> (~ (T Sd (("call" And (~ "P_cp")) And (~ "raw_rd")))))):                                                                                                                                                                                             [32;22mOK[m[32;22m (4.22s)[m[32;22m
[m      Only writes with debit privilege. (G (("call" And "raw_wr") --> (~ (T Sd (("call" And (~ "P_db")) And (~ "raw_wr")))))):                                                                                                                                                                                             [32;22mOK[m[32;22m (4.20s)[m[32;22m
[m    Exception Safety Unsafe Stack
      The stack is left in a consistent state. (G ("exc" --> (~ (((PBu "tainted") Or (XBu "tainted")) And (XBu ("Stack::push(const T&)" Or "Stack::pop()")))))):                                                                                                                                                           [32;22mOK[m[32;22m (74.82s)[m[32;22m
[m      All Stack member functions are exception neutral. (G ((("exc" And (PBu "T")) And (XBd "han")) --> (XBd (XBd (XNu "exc"))))):                                                                                                                                                                                         [32;22mOK[m[32;22m (283.73s)[m[32;22m
[m      All Stack member functions are exception neutral (slow). (G ((("exc" And (PBu "T")) And (XBd ("han" And (XBd "Stack")))) --> (XBd (XBd (XNu "exc"))))):                                                                                                                                                              [32;22mOK[m[32;22m (1785.67s)[m[32;22m
[m    Exception Safety Safe Stack
      The stack is left in a consistent state. (G ("exc" --> (~ (((PBu "tainted") Or (XBu "tainted")) And (XBu ("Stack::Push(const T&)" Or "Stack::Pop()")))))):                                                                                                                                                           [32;22mOK[m[32;22m (17.77s)[m[32;22m
[m      All Stack member functions are exception neutral. (G ((("exc" And (PBu "T")) And (XBd "han")) --> (XBd (XBd (XNu "exc"))))):                                                                                                                                                                                         [32;22mOK[m[32;22m (9.53s)[m[32;22m
[m      All Stack member functions are exception neutral (slow). (G ((("exc" And (PBu "T")) And (XBd ("han" And (XBd "Stack")))) --> (XBd (XBd (XNu "exc"))))):                                                                                                                                                              [32;22mOK[m[32;22m (49.49s)[m[32;22m
[m[?25h
[32;22mAll 130 tests passed[m[32;22m (3050.68s)
[m                  [0m[0m
Progress 1/2: pomc                  [0mpomc> Test suite test-pomc passed[0m
Progress 1/2: pomc                  [0mCompleted 2 action(s).[0m
fpontiggia@grinder-srv:~/POMC$ stack test --profile[1Pmore test-pomc.profhead[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1Pcat[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cls[K[Kfpontiggia@grinder-srv:~/POMC$ ls[Kfpontiggia@grinder-srv:~/POMC$ lsstack test --profile[1Pgit checkout omega [12Pcd POMCgit clone https://github.com/michiari/POMC.git[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cls[Kcd POMCscreen -lsrm -rf POMC[1Pscreen -lsls[Kcd POMC[3@rm -r[C[C[C[C[Cscreen -X -S 47699 killls[Ktack build --ghc-options="-rtsopts -with-rtsopts=-H -Wall -O2" --test --test-arguments="+RTS -s"[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cgit pull[K[1Pcd POMCscreen -r[K[K[K[K[K[K[K[K[Kexit
exit

Script done on 2021-04-29 14:04:44+01:00 [COMMAND_EXIT_CODE="0"]
